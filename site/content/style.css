:root {
    color-scheme: light dark;

    --sakura-dawn-text-muted: #8983ad;
    --sakura-dawn-layer-base: #faedf3;
    --sakura-dawn-hl-high: #cecacd;
    --sakura-dawn-hl-low: #f4e8ef;
    --sakura-dawn-layer-surface: #fff3f8;
    --sakura-dawn-text-norm: #464681;
    --sakura-dawn-hl-med: #dfd9de;
    --sakura-dawn-paint-tree: #33b473;
    --sakura-dawn-paint-iris: #696ac2;
    --sakura-dawn-paint-foam: #6996c2;
    --sakura-dawn-paint-pine: #466481;
    --sakura-dawn-paint-rose: #d875a7;
    --sakura-dawn-paint-gold: #b4b433;
    --sakura-dawn-paint-love: #d87576;
    --sakura-dawn-layer-inv: #3d1127;
    --sakura-dawn-text-subtle: #67669b;
    --sakura-dawn-layer-overlay: #f2e1ea;

    --sakura-moon-text-muted: #5c5b75;
    --sakura-moon-layer-base: #3d1127;
    --sakura-moon-hl-high: #75304f;
    --sakura-moon-hl-low: #45162d;
    --sakura-moon-layer-surface: #46142c;
    --sakura-moon-text-norm: #cbcbe3;
    --sakura-moon-hl-med: #612642;
    --sakura-moon-paint-tree: #4ae194;
    --sakura-moon-paint-iris: #8a8dff;
    --sakura-moon-paint-foam: #b5d9fb;
    --sakura-moon-paint-pine: #678bae;
    --sakura-moon-paint-rose: #eb8dbd;
    --sakura-moon-paint-gold: #bfc069;
    --sakura-moon-paint-love: #ff7677;
    --sakura-moon-layer-inv: #faedf3;
    --sakura-moon-text-subtle: #7d7c99;
    --sakura-moon-layer-overlay: #591c38;

    --sakura-main-text-muted: #5c5b75;
    --sakura-main-layer-base: #15060e;
    --sakura-main-hl-high: #582441;
    --sakura-main-hl-low: #1f0b17;
    --sakura-main-layer-surface: #1f0915;
    --sakura-main-text-norm: #cbcbe3;
    --sakura-main-hl-med: #431a30;
    --sakura-main-paint-tree: #3dc07e;
    --sakura-main-paint-iris: #8a8dff;
    --sakura-main-paint-foam: #b5d9fb;
    --sakura-main-paint-pine: #52708d;
    --sakura-main-paint-rose: #ecb0cf;
    --sakura-main-paint-gold: #bfc069;
    --sakura-main-paint-love: #ff7677;
    --sakura-main-layer-inv: #faedf3;
    --sakura-main-text-subtle: #7d7c99;
    --sakura-main-layer-overlay: #2b0b1d;

    --sakura-text-muted: light-dark(var(--sakura-dawn-text-muted), var(--sakura-moon-text-muted));
    --sakura-text-inv: light-dark(var(--sakura-moon-text-norm), var(--sakura-dawn-text-norm));
    --sakura-layer-base: light-dark(var(--sakura-dawn-layer-base), var(--sakura-moon-layer-base));
    --sakura-hl-high: light-dark(var(--sakura-dawn-hl-high), var(--sakura-moon-hl-high));
    --sakura-hl-low: light-dark(var(--sakura-dawn-hl-low), var(--sakura-moon-hl-low));
    --sakura-layer-surface: light-dark(var(--sakura-dawn-layer-surface), var(--sakura-moon-layer-surface));
    --sakura-text-norm: light-dark(var(--sakura-dawn-text-norm), var(--sakura-moon-text-norm));
    --sakura-hl-med: light-dark(var(--sakura-dawn-hl-med), var(--sakura-moon-hl-med));
    --sakura-paint-tree: light-dark(var(--sakura-dawn-paint-tree), var(--sakura-moon-paint-tree));
    --sakura-paint-iris: light-dark(var(--sakura-dawn-paint-iris), var(--sakura-moon-paint-iris));
    --sakura-paint-foam: light-dark(var(--sakura-dawn-paint-foam), var(--sakura-moon-paint-foam));
    --sakura-paint-pine: light-dark(var(--sakura-dawn-paint-pine), var(--sakura-moon-paint-pine));
    --sakura-paint-rose: light-dark(var(--sakura-dawn-paint-rose), var(--sakura-moon-paint-rose));
    --sakura-paint-gold: light-dark(var(--sakura-dawn-paint-gold), var(--sakura-moon-paint-gold));
    --sakura-paint-love: light-dark(var(--sakura-dawn-paint-love), var(--sakura-moon-paint-love));
    --sakura-layer-inv: light-dark(var(--sakura-dawn-layer-inv), var(--sakura-moon-layer-inv));
    --sakura-text-subtle: light-dark(var(--sakura-dawn-text-subtle), var(--sakura-moon-text-subtle));
    --sakura-layer-overlay: light-dark(var(--sakura-dawn-layer-overlay), var(--sakura-moon-layer-overlay));
}

:root {
    --padding: 16px;
    --gap: 8px;
    --home-card-width: 368px;
    --cubic: cubic-bezier(0.5, 0, 0.25, 1);
}

* {
    transition: all 0.2s var(--cubic) 0s;
}

body {
    background-color: var(--sakura-layer-base);
    color: var(--sakura-text-norm);
    margin-bottom: 96px;
}

div.home {
    display: flex;
    flex-direction: row;
    gap: var(--gap);
    & .column {
        display: flex;
        flex-direction: column;
        gap: var(--gap);
    }
}

div.listing {
    display: flex;
    flex-direction: column;
    gap: var(--gap);
}

@keyframes spinner {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

button.action {
    border-radius: calc(var(--padding) - var(--gap));
    border: 0px solid #0000;
    --bg: var(--sakura-layer-inv);

    background-color: var(--bg);
    cursor: pointer;
    color: var(--sakura-text-norm);
    border-radius: calc(var(--padding)  / 2);
    padding: var(--gap);
    border: 2px solid color-mix(in oklab, var(--bg) 75%, var(--sakura-layer-base) 25%);
    width: min-content;
    height: 38px;

    &.disable { opacity: 50%; cursor: not-allowed; }
    &.rot { svg { animation: spinner 1s linear infinite; } }

    &.new { --bg: var(--sakura-paint-pine); }
    &.edit { --bg: var(--sakura-paint-iris); }
    &.save { --bg: var(--sakura-paint-tree); }
    &.delete { --bg: var(--sakura-paint-love); }
    &.undo { --bg: var(--sakura-paint-gold); }
    &.sync { --bg: var(--sakura-paint-foam); }
    &.glass {
        border: 2px solid color-mix(in oklab, var(--sakura-layer-inv) 75%, #0000 25%);
        background-color: color-mix(in oklab, var(--sakura-layer-inv) 50%, #0000 50%);
        backdrop-filter: blur(calc(var(--padding) / 2));
        &:hover {
            background-color: color-mix(in oklab, var(--sakura-layer-inv) 25%, #0000 75%);
            backdrop-filter: blur(calc(var(--padding) / 4));
        }
        &:active {
            background-color: color-mix(in oklab, var(--sakura-layer-inv) 75%, #0000 25%);
            backdrop-filter: blur(calc(var(--padding)));
        }
    }

    &:hover {
        background-color: color-mix(in oklab, var(--bg) 75%, var(--sakura-layer-base) 25%);
    }
    &:active {
        background-color: color-mix(in oklab, var(--bg) 75%, var(--sakura-layer-inv) 25%);
    }
    & span {
        vertical-align: super;
    }
    & svg {
        height: 100%;
        width: min-content;
        display: inline;
        & path {
            stroke: var(--sakura-layer-base);
        }
    }
}

div.home-card {
    background-color: var(--sakura-layer-surface);
    max-width: 100%;
    padding: var(--gap);
    border-radius: var(--padding);

    &.template form {
        display: flex;
        gap: var(--gap);
        margin-bottom: 0px;
    }

    & div.token {
        font-family: "Ubuntu Mono", monospace;
        background-color: color-mix(in oklab, var(--sakura-layer-inv) 50%, #0000 50%);
        backdrop-filter: blur(calc(var(--padding) / 2));
        color: var(--sakura-layer-surface);
        border: 2px solid var(--sakura-layer-surface);
        border-radius: calc(var(--padding) / 4);
        padding: var(--gap);
        font-weight: bold;
        width: min-content;
        position: absolute;
        bottom: var(--gap);
        right: var(--gap);
    }

    & img {
        width: 100%;
        border-radius: calc(var(--padding) - var(--gap));
    }

    & h1 {
        color: var(--sakura-layer-inv);
        & > input {
            font-size: large;
            font-weight: bold;
        }
    }

    & .head .img {
        position: relative;

        & button {
            position: absolute;
            bottom: var(--gap);
            right: var(--gap);
        }

        & img[src=""] + button {
            bottom: unset;
            top: var(--gap);
        }
    }

    & .head.edit {
        padding: var(--gap);
        margin-bottom: var(--gap);
        border-radius: calc(var(--padding) / 2);
        background-color: var(--sakura-paint-iris);
        & h1, h3, form {
            margin: 0;
        }
        & form, div.title {
            display: flex;
            flex-direction: column;
            gap: var(--gap);
        }
    }

    & .upload {
        display: flex;
        flex-direction: row;
        gap: var(--gap);
        & input {
            width: 100%;
        }
    }

    & .card-id {
        display: flex;
        gap: var(--gap);
        margin-bottom: var(--gap);
        & button {
            width: 36px;
        }
    }

    & div.links {
        display: flex;
        flex-direction: column;
        gap: var(--gap);
    }

    & div.anchor {
        & .edit.flex {
            display: flex;
            flex-direction: row;
            gap: var(--gap);
        }
        &.edit {
            background-color: var(--sakura-paint-iris);
            border-radius: calc(var(--padding) - var(--gap));
            padding: var(--gap);
            & .behind {
                top: 0px;
                z-index: 1;
                height: revert;
                opacity: 1;
            }
        }
        .behind {
            position: relative;
            height: 0px;
            top: -38px;
            z-index: -1;
            opacity: 0;
        }
        & > div {
            display: flex;
            flex-direction: row;
            gap: var(--gap);
        }
        & form {
            display: flex;
            flex-direction: column;
            margin: 0;
            gap: var(--gap);
            & > div {
                display: flex;
                flex-direction: row;
                gap: var(--gap);
                & input.link {
                    border-radius: calc(var(--padding) - var(--gap));
                }
            }
        }
    }

    & div.link {
        width: 100%;
        background-color: var(--sakura-layer-base);
        border-radius: calc(var(--padding) - var(--gap));
        &:not(:first-child) {
            margin-top: var(--gap);
        }
        &:hover {
            background-color: var(--sakura-layer-overlay);
        }
        & > a, & > span {
            text-decoration: none;
            color: var(--sakura-text-norm);
            display: block;
            padding: var(--gap);
            & span.details {
                color: var(--sakura-text-muted);
                font-style: italic;
            }
        }
    }

    & input {
        padding-top: var(--gap);
        padding-bottom: var(--gap);
        border: 2px solid var(--sakura-hl-high);
        width: 100%;
        border-radius: calc(var(--padding) / 2);
        background-color: var(--sakura-layer-surface);
    }

    & input[data-id="show-id"] {
        font-family: "Ubuntu Mono", monospace;
        background-color: var(--sakura-layer-inv);
        color: var(--sakura-layer-surface);
    }
}

div.db-episode {
    display: flex;
    flex-direction: row;
    gap: var(--gap);
    background-color: var(--sakura-layer-surface);
    padding: var(--gap);
    border-radius: var(--padding);
    & div.img img {
        height: 256px;
        border-radius: calc(var(--padding) - var(--gap));
    }
    & h1 {
        color: var(--sakura-layer-inv);
    }
    & h4 {
        color: var(--sakura-text-muted);
    }
    & div.link {
        background-color: var(--sakura-layer-base);
        border-radius: calc(var(--padding) - var(--gap));
        &:not(:first-child) {
            margin-top: var(--gap);
        }
        &:hover {
            background-color: var(--sakura-layer-overlay);
        }
        & a {
            text-decoration: none;
            color: var(--sakura-text-norm);
            display: block;
            padding: var(--gap);
        }
    }
    & div.details {
        display: flex;
        flex-direction: column;
        & div.meta {
            flex-grow: 1;
        }
    }
}

div#buttons {
    position: fixed;
    bottom: var(--padding);
    right: var(--padding);
    display: flex;
    flex-direction: column;
    gap: calc(var(--gap) / 2);

    & > div {
        display: flex;
        flex-direction: row;
        gap: calc(var(--gap) / 2);
        justify-content: end;
    }

    & button {
        border: 2px solid var(--btn-bg);
        backdrop-filter: blur(calc(var(--padding) / 2));
        background-color: color-mix(in oklab, var(--btn-bg) 75%, #0000 25%);
        border-radius: calc(var(--padding) / 2);
        cursor: pointer;
        width: calc(var(--padding) * 2);
        height: calc(var(--padding) * 2);
        & > svg {
            width: 100%;
            height: 100%;
            & path {
                stroke: var(--sakura-layer-base);
            }
        }

        &.inv {
            --btn-bg: var(--sakura-layer-inv);
            background-color: color-mix(in oklab, var(--btn-bg) 75%, #0000 25%);
        }

        &.gold {
            --btn-bg: var(--sakura-paint-gold);
        }

        &.rose {
            --btn-bg: var(--sakura-paint-rose);
        }

        &.pine {
            --btn-bg: var(--sakura-paint-pine);
        }

        &.foam {
            --btn-bg: var(--sakura-paint-foam);
        }

        &.tree {
            --btn-bg: var(--sakura-paint-tree);
        }

        &.iris {
            --btn-bg: var(--sakura-paint-iris);
        }

        &.love {
            --btn-bg: var(--sakura-paint-love);
        }
    }
}

div.svg-cache {
    display: none;
}

div.login {
    display: flex;
    width: 100%;
    height: 100%;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    & form {
        display: flex;
        flex-direction: column;
        gap: var(--gap);
    }
}

input[type="text"], input[type="password"] {
    background-color: var(--sakura-layer-surface);
    color: var(--sakura-text-norm);
    border: 2px solid var(--sakura-layer-surface);
    padding: var(--padding);
    border-radius: var(--padding);
    & + span.error {
        color: var(--sakura-paint-rose);
        font-size: small;
        font-weight: bold;
    }
    &.mono {
        font-family: "Ubuntu Mono", monospace;
        background-color: var(--sakura-layer-inv);
        color: var(--sakura-layer-surface);
    }
}

input[type="submit"] {
    background-color: var(--sakura-paint-tree);
    color: var(--sakura-layer-base);
    font-weight: bold;
    border: 2px solid var(--sakura-layer-overlay);
    padding: var(--padding);
    border-radius: var(--padding);
    &[disabled] {
        background-color: var(--sakura-paint-rose);
        &:hover {
            background-color: var(--sakura-paint-love);
            cursor: not-allowed;
        }
    }
    &:hover {
        background-color: var(--sakura-paint-gold);
        cursor: pointer;
    }
    & + div.error {
        color: var(--sakura-paint-rose);
        font-size: small;
        font-weight: bold;
    }
}
